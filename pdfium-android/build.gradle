apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    namespace "com.shockwave.pdfium"
//    ndkVersion '29.0.13599879'
    compileSdkVersion 36

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 36
        versionCode 1
        versionName PUBLISH_VERSION

        // Enable NDK build
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        }
        externalNativeBuild {
            ndkBuild {
                arguments "APP_PLATFORM=android-23"
                abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
            }
        }
    }
    publishing {
        singleVariant("release") {
            withSourcesJar()
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            // Point to the Android.mk location
            jni.srcDirs = ['src/main/jni']
            // Point to where the prebuilt native libraries are, excluding libc++_shared.so
            jniLibs {
                srcDir 'src/main/jni/lib'
                exclude '**/libc++_shared.so'
            }
        }
    }

    externalNativeBuild {
        ndkBuild {
            path 'src/main/jni/Android.mk'
        }
    }

    // region java compile options

    java {
        toolchain {
            languageVersion.set(JavaLanguageVersion.of(17))
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    // endregion
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
}

apply plugin: 'maven-publish'
afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                groupId = PUBLISH_GROUP_ID
                artifactId = PUBLISH_ARTIFACT_ID
                version = PUBLISH_VERSION
            }
        }
    }
}